/* global describe it beforeEach */
const { ethers } = require('hardhat');
const chai = require('chai');
const chaiAsPromised = require('chai-as-promised');

chai.use(chaiAsPromised);

const { expect } = chai;

let snarkStub;

describe('Logic/Snark', () => {
  beforeEach(async () => {
    const SnarkStub = await ethers.getContractFactory('SnarkStub');
    snarkStub = await SnarkStub.deploy();
  });

  it('Should reject invalid proofs', async () => {
    expect(await snarkStub.verify(
      {
        artifactsIPFSHash: '',
        alpha1: {
          x: 20491192805390485299153009773594534940189261866228447918068658471970481763042n,
          y: 9383485363053290200918347156157836566562967994039712273449902621266178545958n,
        },
        beta2: {
          x: [
            4252822878758300859123897981450591353533073413197771768651442665752259397132n,
            6375614351688725206403948262868962793625744043794305715222011528459656738731n,
          ],
          y: [
            21847035105528745403288232691147584728191162732299865338377159692350059136679n,
            10505242626370262277552901082094356697409835680220590971873171140371331206856n,
          ],
        },
        gamma2: {
          x: [
            11559732032986387107991004021392285783925812861821192530917403151452391805634n,
            10857046999023057135944570762232829481370756359578518086990519993285655852781n,
          ],
          y: [
            4082367875863433681332203403145435568316851327593401208105741076214120093531n,
            8495653923123431417604973247489272438418190587263600148770280649306958101930n,
          ],
        },
        delta2: {
          x: [
            188902110140960999437215333615254189209919314487640995097607932987630137870n,
            11073681697308750762902631393144770045265535434152998926166681327742862389720n,
          ],
          y: [
            12142140203130703985152996592244904686069461493175054219378597868280155585117n,
            15063650998723154314373222694930431534039250208917157182860312892930704399553n,
          ],
        },
        ic: [
          {
            x: 2993443399483829479859062654623367849867402030827446168645690400729048057171n,
            y: 6290549814710588933008910432328009935547669554680347457133958214377467698367n,
          },
          {
            x: 4817169966987370106994954147230318244697332121437005888971768555740971493685n,
            y: 6994616690753656575650417771605518728772286127296950476420584008141402194156n,
          },
        ],
      },
      {
        a: {
          x: 21829990306363129663705101791610682736881730096938952057707677568549992844553n,
          y: 11594695722886827455104227674033588185891469457556495554406280341485449350901n,
        },
        b: {
          x: [
            17964252940716719122127481416848262521486874409111852240053488026632114123379n,
            10105970265156575588784448705617319350776685939870032829201756535647299009547n,
          ],
          y: [
            2220553469466421054367256740491388096856068586560628474155952776895140193527n,
            7170418635336461696887936602175197918358502156530054510931474519611838090294n,
          ],
        },
        c: {
          x: 18569352863164988278462618558099847905286852560024212308385908677206910617785n,
          y: 6839924026209926280893548626884302795504269806286571110005253661754455920561n,
        },
      },
      [5532332138602148186846909466520997324464012953138707617182513052960498997108n],
    )).to.equal(false);
  });

  it('Should accept valid proofs', async () => {
    expect(await snarkStub.verify(
      {
        artifactsIPFSHash: '',
        alpha1: {
          x: 20491192805390485299153009773594534940189261866228447918068658471970481763042n,
          y: 9383485363053290200918347156157836566562967994039712273449902621266178545958n,
        },
        beta2: {
          x: [
            4252822878758300859123897981450591353533073413197771768651442665752259397132n,
            6375614351688725206403948262868962793625744043794305715222011528459656738731n,
          ],
          y: [
            21847035105528745403288232691147584728191162732299865338377159692350059136679n,
            10505242626370262277552901082094356697409835680220590971873171140371331206856n,
          ],
        },
        gamma2: {
          x: [
            11559732032986387107991004021392285783925812861821192530917403151452391805634n,
            10857046999023057135944570762232829481370756359578518086990519993285655852781n,
          ],
          y: [
            4082367875863433681332203403145435568316851327593401208105741076214120093531n,
            8495653923123431417604973247489272438418190587263600148770280649306958101930n,
          ],
        },
        delta2: {
          x: [
            188902110140960999437215333615254189209919314487640995097607932987630137870n,
            11073681697308750762902631393144770045265535434152998926166681327742862389720n,
          ],
          y: [
            12142140203130703985152996592244904686069461493175054219378597868280155585117n,
            15063650998723154314373222694930431534039250208917157182860312892930704399553n,
          ],
        },
        ic: [
          {
            x: 2993443399483829479859062654623367849867402030827446168645690400729048057171n,
            y: 6290549814710588933008910432328009935547669554680347457133958214377467698367n,
          },
          {
            x: 4817169966987370106994954147230318244697332121437005888971768555740971493685n,
            y: 6994616690753656575650417771605518728772286127296950476420584008141402194156n,
          },
        ],
      },
      {
        a: {
          x: 18291694627520003140207502822543998640071211314849010836380181297084034897542n,
          y: 7951721204878684046458867373474577032289489807728187163098875500451607649562n,
        },
        b: {
          x: [
            1373021145642686779956545287834516948654846826964901924984742593040260084420n,
            8585956333615681688026634483231745301344829292857332405139097902446024141610n,
          ],
          y: [
            6651394427337505973198489657221098016839717795183440990723294026147030353904n,
            12382753188264367908890177370270923212884230488310659158729006789283416351914n,
          ],
        },
        c: {
          x: 5312943872837077888692794940370049083036017041018358647167682081431633656421n,
          y: 13043649712555991202015681468992602261894097412723531776335283574558214889288n,
        },
      },
      [5532332138602148186846909466520997324464012953138707617182513052960498997108n],
    )).to.equal(true);
  });

  it('Should reject points outside scalar field', async () => {
    // eslint-disable-next-line no-unused-expressions
    expect(snarkStub.verify(
      {
        artifactsIPFSHash: '',
        alpha1: {
          x: 20491192805390485299153009773594534940189261866228447918068658471970481763042n,
          y: 9383485363053290200918347156157836566562967994039712273449902621266178545958n,
        },
        beta2: {
          x: [
            4252822878758300859123897981450591353533073413197771768651442665752259397132n,
            6375614351688725206403948262868962793625744043794305715222011528459656738731n,
          ],
          y: [
            21847035105528745403288232691147584728191162732299865338377159692350059136679n,
            10505242626370262277552901082094356697409835680220590971873171140371331206856n,
          ],
        },
        gamma2: {
          x: [
            11559732032986387107991004021392285783925812861821192530917403151452391805634n,
            10857046999023057135944570762232829481370756359578518086990519993285655852781n,
          ],
          y: [
            4082367875863433681332203403145435568316851327593401208105741076214120093531n,
            8495653923123431417604973247489272438418190587263600148770280649306958101930n,
          ],
        },
        delta2: {
          x: [
            188902110140960999437215333615254189209919314487640995097607932987630137870n,
            11073681697308750762902631393144770045265535434152998926166681327742862389720n,
          ],
          y: [
            12142140203130703985152996592244904686069461493175054219378597868280155585117n,
            15063650998723154314373222694930431534039250208917157182860312892930704399553n,
          ],
        },
        ic: [
          {
            x: 2993443399483829479859062654623367849867402030827446168645690400729048057171n,
            y: 6290549814710588933008910432328009935547669554680347457133958214377467698367n,
          },
          {
            x: 4817169966987370106994954147230318244697332121437005888971768555740971493685n,
            y: 6994616690753656575650417771605518728772286127296950476420584008141402194156n,
          },
        ],
      },
      {
        a: {
          x: 18291694627520003140207502822543998640071211314849010836380181297084034897542n,
          y: 7951721204878684046458867373474577032289489807728187163098875500451607649562n,
        },
        b: {
          x: [
            1373021145642686779956545287834516948654846826964901924984742593040260084420n,
            8585956333615681688026634483231745301344829292857332405139097902446024141610n,
          ],
          y: [
            6651394427337505973198489657221098016839717795183440990723294026147030353904n,
            12382753188264367908890177370270923212884230488310659158729006789283416351914n,
          ],
        },
        c: {
          x: 5312943872837077888692794940370049083036017041018358647167682081431633656421n,
          y: 13043649712555991202015681468992602261894097412723531776335283574558214889288n,
        },
      },
      [21888242871839275222246405745257275088548364400416034343698204186575808495618n],
    )).to.eventually.throw;
  });
});
